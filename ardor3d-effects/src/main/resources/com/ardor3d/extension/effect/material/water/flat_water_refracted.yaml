---
techniques: 
  passes: 
      - 
        attributes:
          - key: vertex
          - key: normal
          - key: uv0
          
        uniforms: 
          - builtIn: [model, view, projection, normalMat]
          -  
            shaderKey: reflectMat
            type: Matrix4x4
            value: [[-1, 0, 0, 0],
                    [ 0, 1, 0, 0],
                    [ 0, 0, 1, 0],
                    [ 1, 0, 0, 1]]
          -  
            shaderKey: dudvMat
            type: Matrix4x4
            value: [[.8, 0, 0, 0],
                    [0, .8, 0, 0],
                    [0, 0, 1, 0],
                    [0, 0, 0, 1]]
          -
            shaderKey: normalMap
            type: Int1
            value: 0
          -
            shaderKey: reflection
            type: Int1
            value: 1
          -
            shaderKey: dudvMap
            type: Int1
            value: 2
          -
            shaderKey: refraction
            type: Int1
            value: 3
          -
            shaderKey: depthMap
            type: Int1
            value: 4
          -
            shaderKey: tangent
            type: Float3
            source: SpatialProperty
          -
            shaderKey: binormal
            type: Float3
            source: SpatialProperty
          -
            shaderKey: normalTranslation
            type: Float1
            source: SpatialProperty
          -
            shaderKey: refractionTranslation
            type: Float1
            source: SpatialProperty
          -
            shaderKey: waterColor
            type: Float4
            source: SpatialProperty
          -
            shaderKey: waterColorEnd
            type: Float4
            source: SpatialProperty
          -
            shaderKey: abovewater
            type: Int1
            source: SpatialProperty
          -
            shaderKey: useFadeToFogColor
            type: Int1
            source: SpatialProperty
          
        shaders: 
          Vertex: 
            source: water/flat_water.vert
            
          Fragment:
            source: water/flat_water_refracted.frag